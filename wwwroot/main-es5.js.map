{"version":3,"sources":["webpack:///src/app/_model/activity.ts","webpack:///src/app/_services/affirmation.service.ts","webpack:///src/app/components/activitytime/activitytime.component.html","webpack:///src/app/components/affirmation/affirmation.component.css","webpack:///src/app/_services/activitytime.service.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/affirmation/affirmation.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/_model/affirmation.ts","webpack:///src/app/_services/activity.service.ts","webpack:///src/app/components/activities/activities.component.css","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/components/affirmation/affirmation.component.ts","webpack:///src/app/counter/counter.component.html","webpack:///src/app/app.component.html","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/nav-menu/nav-menu.component.css","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/activitytime/activitytime.component.css","webpack:///src/app/_model/activityTime.ts","webpack:///src/app/components/activitytime/activitytime.component.ts","webpack:///src/app/components/activities/activities.component.html","webpack:///src/app/components/activities/activities.component.ts","webpack:///src/main.ts"],"names":["Activity","AffirmationService","http","baseUrl","apiUrl","id","get","toString","userId","affirmation","retval","post","subscribe","result","console","log","error","providedIn","ActivitytimeService","activityId","activitytime","AccountService","currentUserSource","currentUser$","asObservable","model","pipe","response","user","setCurrentUser","roles","getDecodedToken","token","role","Array","isArray","push","localStorage","setItem","JSON","stringify","next","removeItem","parse","atob","split","HomeComponent","selector","template","environment","production","FetchDataComponent","forecasts","Affirmation","ActivityService","activity","CounterComponent","currentCount","NavMenuComponent","isExpanded","AppComponent","title","AffirmationComponent","affirmationService","userAffirmations","getAffirmation","getAffirmationsForUser","aff","affirmationText","createAffirmation","removeAffirmation","AppModule","declarations","imports","forRoot","path","component","pathMatch","providers","bootstrap","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","ActivityTime","ActivitytimeComponent","activityTimeService","userActivityTimes","getActivityTime","activityTime","getActivityTimesForActivity","achievement","activityName","intimacy","pleasure","time","Date","createActivityTime","removeActivityTime","ActivitiesComponent","activityService","accountService","userActivities","getActivity","getActivitiesForUser","userID","activityTimes","activityDate","createActivity","removeActivity","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { ActivityTime } from \"./activityTime\";\r\n\r\nexport interface IActivity {\r\n  id: number;\r\n  activityDate: Date;\r\n  activityTimes: ActivityTime[];\r\n  userID: number;\r\n}\r\n\r\nexport class Activity implements IActivity {\r\n    id: number;\r\n    activityDate: Date;\r\n    activityTimes: ActivityTime[];\r\n    userID: number;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { error } from '@angular/compiler/src/util';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Affirmation, IAffirmation } from '../_model/affirmation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AffirmationService {\r\n  baseUrl = environment.apiUrl;\r\n  affirmation: Affirmation;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAffirmation(id: number) {\r\n    return this.http.get<IAffirmation>(this.baseUrl + 'affirmation/getaffirmation/' + id.toString());\r\n  }\r\n\r\n  getAffirmationsForUser(userId: number) {\r\n    return this.http.get<IAffirmation[]>(this.baseUrl + 'affirmation/getaffirmations/' + userId.toString());\r\n  }\r\n\r\n  createAffirmation(affirmation: IAffirmation) {\r\n    var retval = this.http.post<Affirmation>(this.baseUrl + 'affirmation/createaffirmation/', affirmation)\r\n      .subscribe(result => {\r\n        console.log(result);\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      });\r\n    console.log(retval);\r\n  }\r\n\r\n  removeAffirmation(id: number) {\r\n    return this.http.delete<IAffirmation>(this.baseUrl + 'affirmation/removeaffirmation/' + id.toString()).subscribe(result => {\r\n      console.log(result);\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n}\r\n","export default \"<p (click)=\\\"createActivityTime(1);\\\">Create Activity Time</p>\\n<p (click)=\\\"getActivityTime(2);\\\">Get Activity Time (2)</p>\\n<p (click)=\\\"getActivityTimesForActivity(1);\\\">Get Activity Times for User (4)</p>\\n<p (click)=\\\"removeActivityTime(2);\\\">Remove Activity Time</p>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZmZpcm1hdGlvbi5jb21wb25lbnQuY3NzIn0= */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { ActivityTime, IActivityTime } from '../_model/activityTime';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ActivitytimeService {\r\n  baseUrl = environment.apiUrl;\r\n  activitytime: ActivityTime;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getActivityTime(id: number) {\r\n    return this.http.get<IActivityTime>(this.baseUrl + 'activitytime/getactivitytime/' + id.toString());\r\n  }\r\n\r\n  getActivityTimesForActivity(activityId: number) {\r\n    return this.http.get<IActivityTime[]>(this.baseUrl + 'activitytime/getactivitytimes/' + activityId.toString());\r\n  }\r\n\r\n  createActivityTime(activityId: number, activitytime: IActivityTime) {\r\n    var retval = this.http.post<ActivityTime>(this.baseUrl + 'activitytime/createactivitytime/' + activityId.toString(), activitytime)\r\n      .subscribe(result => {\r\n        console.log(result);\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      });\r\n    console.log(retval);\r\n  }\r\n\r\n  removeActivityTime(id: number) {\r\n    return this.http.delete<IActivityTime>(this.baseUrl + 'activitytime/removeactivitytime/' + id.toString()).subscribe(result => {\r\n      console.log(result);\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_model/user';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n        }\r\n        return user;\r\n      })\r\n    )\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n  }\r\n\r\n  getDecodedToken(token) {\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export default \"<div>\\n  <p (click)=\\\"createAffirmation();\\\">Create Affirmation</p>\\n  <p (click)=\\\"getAffirmation(2);\\\">Get Affirmation (2)</p>\\n  <p (click)=\\\"getAffirmationsForUser(4);\\\">Get Affirmations for User (4)</p>\\n  <p (click)=\\\"removeAffirmation(6);\\\">Remove Affirmation</p>\\n</div>\\n\";","export default \"<h1>Hello, world!</h1>\\r\\n<p>Welcome to your new single-page application, built with:</p>\\r\\n<ul>\\r\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\r\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\r\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\r\\n</ul>\\r\\n<p>To help you get started, we've also set up:</p>\\r\\n<ul>\\r\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\r\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\r\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\r\\n</ul>\\r\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\r\\n\";","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","//import { User } from \"./user\";\r\n\r\nexport interface IAffirmation {\r\n  id: number;\r\n  userId: number;\r\n  affirmationText: string;\r\n}\r\n\r\nexport class Affirmation implements IAffirmation {\r\n    id: number;\r\n    userId: number;\r\n    affirmationText: string;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\r\nimport { Activity, IActivity } from '../_model/activity';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n  baseUrl = environment.apiUrl;\n  activity: Activity;\n\n  constructor(private http: HttpClient) { }\n\n  getActivity(id: number) {\n    return this.http.get<IActivity>(this.baseUrl + 'activities/getactivity/' + id.toString());\n  }\n\n  getActivitiesForUser(userId: number) {\n    return this.http.get<IActivity[]>(this.baseUrl + 'activities/getactivities/' + userId.toString());\n  }\n\n  createActivity(activity: IActivity) {\n    var retval = this.http.post<Activity>(this.baseUrl + 'activities/createactivity/', activity)\n      .subscribe(result => {\n        console.log(result);\n        error => {\n          console.log(error);\n        }\n      });\n    console.log(retval);\n  }\n\n  removeActivity(id: number) {\n    return this.http.delete<IActivity>(this.baseUrl + 'activities/removeactivity/' + id.toString()).subscribe(result => {\n      console.log(result);\n      error => {\n        console.log(error);\n      }\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY3Rpdml0aWVzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { Component } from '@angular/core';\nimport { Affirmation, IAffirmation } from '../../_model/affirmation';\r\nimport { User } from '../../_model/user';\r\nimport { AffirmationService } from '../../_services/affirmation.service';\r\n\n@Component({\n  selector: 'app-affirmation',\n  templateUrl: './affirmation.component.html',\n  styleUrls: ['./affirmation.component.css']\n})\nexport class AffirmationComponent {\n  user: User;\n  affirmation: IAffirmation;\n  userAffirmations: Affirmation[] = [];\n\n  constructor(private affirmationService: AffirmationService) { }\n\n  getAffirmation(id: number) {\n    this.affirmationService.getAffirmation(id).subscribe(result => {\r\n      this.affirmation = result;\r\n    });\r\n  }\n\n  getAffirmationsForUser(userId: number) {\n    this.affirmationService.getAffirmationsForUser(userId).subscribe(result => {\r\n      this.userAffirmations = result;\r\n      console.log(result);\r\n    })\r\n  }\n\n  createAffirmation() {\n    var aff = new Affirmation();\r\n    aff.userId = 4;\r\n    aff.affirmationText = 'This is a new Affirmation';\r\n    this.affirmationService.createAffirmation(aff);\r\n  }\n\n  removeAffirmation(id: number) {\n    this.affirmationService.removeAffirmation(id);\r\n  }\n}\n","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<body>\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">MindYourMoodWeb</a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex justify-content-end\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\"\\r\\n              [routerLinkActive]=\\\"['link-active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/counter']\\\">Counter</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/fetch-data']\\\">Fetch data</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/affirmation']\\\">Affirmations</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/activities']\\\">Activities</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/activitytime']\\\">Activity Times</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { AffirmationComponent } from './components/affirmation/affirmation.component';\nimport { ActivitiesComponent } from './components/activities/activities.component';\nimport { ActivitytimeComponent } from './components/activitytime/activitytime.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    AffirmationComponent,\r\n    ActivitiesComponent,\r\n    ActivitytimeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'counter', component: CounterComponent },\r\n      { path: 'fetch-data', component: FetchDataComponent },\r\n      { path: 'affirmation', component: AffirmationComponent },\r\n      { path: 'activities', component: ActivitiesComponent },\r\n      { path: 'activitytime', component: ActivitytimeComponent }\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdi1tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBQ0E7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRjs7QUFFQTtFQUNFLDhDQUE4QztBQUNoRCIsImZpbGUiOiJuYXYtbWVudS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYS5uYXZiYXItYnJhbmQge1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxufVxyXG5cclxuaHRtbCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gIGh0bWwge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxufVxyXG5cclxuLmJveC1zaGFkb3cge1xyXG4gIGJveC1zaGFkb3c6IDAgLjI1cmVtIC43NXJlbSByZ2JhKDAsIDAsIDAsIC4wNSk7XHJcbn1cclxuIl19 */\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY3Rpdml0eXRpbWUuY29tcG9uZW50LmNzcyJ9 */\";","export interface IActivityTime {\r\n  id: number;\r\n  activityName: string;\r\n  time: Date;\r\n  achievement: number;\r\n  intimacy: number;\r\n  pleasure: number;\r\n  activityId: number;\r\n}\r\n\r\nexport class ActivityTime implements IActivityTime {\r\n    id: number;\r\n    activityName: string;\r\n    time: Date;\r\n    achievement: number;\r\n    intimacy: number;\r\n    pleasure: number;\r\n    activityId: number;\r\n}\r\n","import { Component } from '@angular/core';\nimport { ActivityTime, IActivityTime } from '../../_model/activityTime';\r\nimport { User } from '../../_model/user';\r\nimport { ActivitytimeService } from '../../_services/activitytime.service';\r\n\n@Component({\n  selector: 'app-activitytime',\n  templateUrl: './activitytime.component.html',\n  styleUrls: ['./activitytime.component.css']\n})\nexport class ActivitytimeComponent {\n  user: User;\n  activityTime: IActivityTime;\n  userActivityTimes: ActivityTime[] = [];\n\n  constructor(private activityTimeService: ActivitytimeService) { }\n\n  getActivityTime(id: number) {\n    this.activityTimeService.getActivityTime(id).subscribe(result => {\n      this.activityTime = result;\n    });\n  }\n\n  getActivityTimesForActivity(activityId: number) {\n    this.activityTimeService.getActivityTimesForActivity(activityId).subscribe(result => {\n      this.userActivityTimes = result;\n    })\n  }\n\n  createActivityTime(activityId: number) {\n    var activityTime = new ActivityTime();\n    activityTime.activityId = activityId;\n    activityTime.achievement = 1;\n    activityTime.activityName = \"Doing some steps exercise\";\n    activityTime.achievement = 8;\n    activityTime.intimacy = 1;\n    activityTime.pleasure = 4;\n    activityTime.time = new Date(2021, 1, 16, 14, 30, 0, 0);\n    this.activityTimeService.createActivityTime(activityId, activityTime);\n  }\n\n  removeActivityTime(id: number) {\n    this.activityTimeService.removeActivityTime(id);\n  }\n}\n","export default \"<p (click)=\\\"createActivity(4);\\\">Create Activity</p>\\n<p (click)=\\\"getActivity(1);\\\">Get Activity (1)</p>\\n<p (click)=\\\"getActivitiesForUser(4);\\\">Get Activity for User (4)</p>\\n<p (click)=\\\"removeActivity(4);\\\">Remove Activity</p>\\n\";","import { Component } from '@angular/core';\nimport { Activity, IActivity } from '../../_model/activity';\r\nimport { User } from '../../_model/user';\r\nimport { AccountService } from '../../_services/account.service';\r\nimport { ActivityService } from '../../_services/activity.service';\r\n\n@Component({\n  selector: 'app-activities',\n  templateUrl: './activities.component.html',\n  styleUrls: ['./activities.component.css']\n})\nexport class ActivitiesComponent {\n  user: User;\n  activity: IActivity;\n  userActivities: Activity[] = [];\n\n  constructor(private activityService: ActivityService, private accountService: AccountService) { }\n\n  getActivity(id: number) {\n    this.activityService.getActivity(id).subscribe(result => {\n      this.activity = result;\n      console.log(result);\n    });\n  }\n\n  getActivitiesForUser(userId: number) {\n    this.activityService.getActivitiesForUser(userId).subscribe(result => {\n      this.userActivities = result;\n    })\n  }\n\n  createActivity(userId: number, ) {\n    var activity = new Activity();\n    activity.userID = userId;\n    activity.activityTimes = [];\n    activity.activityDate = new Date(2021, 1, 16, 15, 30, 0, 0);\n    this.activityService.createActivity(activity);\n  }\n\n  removeActivity(id: number) {\n    this.activityService.removeActivity(id);\n  }\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}